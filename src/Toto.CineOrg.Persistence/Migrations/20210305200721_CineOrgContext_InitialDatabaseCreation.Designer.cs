// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Toto.CineOrg.Persistence.Database;

namespace Toto.CineOrg.Persistence.Migrations
{
    [DbContext(typeof(CineOrgContext))]
    [Migration("20210305200721_CineOrgContext_InitialDatabaseCreation")]
    partial class CineOrgContext_InitialDatabaseCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Toto.CineOrg.DomainModel.DomainMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20db69d0-7760-4c3f-a484-032423e61018"),
                            CreatedAt = new DateTime(2020, 4, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "An ugly duckling having undergone a remarkable change, still harbors feelings for her crush: a carefree playboy, but not before his business-focused brother has something to say about it.",
                            Genre = "romance",
                            Title = "Sabrina",
                            YearReleased = 1995
                        },
                        new
                        {
                            Id = new Guid("428429c0-9108-401c-b571-a09dc156ae50"),
                            CreatedAt = new DateTime(2019, 4, 2, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "When CIA Analyst Jack Ryan interferes with an IRA assassination, a renegade faction targets him and his family for revenge.",
                            Genre = "thriller",
                            Title = "Patriot Games",
                            YearReleased = 1992
                        });
                });

            modelBuilder.Entity("Toto.CineOrg.DomainModel.DomainSeat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("RowLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("TheatreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TheatreId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b409157a-5d8c-4545-aad5-7d0f02b5e515"),
                            Category = "stalls",
                            RowLetter = "A",
                            SeatNumber = 1,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        },
                        new
                        {
                            Id = new Guid("b5111d43-7b41-45e3-a3b8-8f041275829b"),
                            Category = "stalls",
                            RowLetter = "A",
                            SeatNumber = 2,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        },
                        new
                        {
                            Id = new Guid("0306c201-81d1-441d-bd5b-54dbd35fa3ee"),
                            Category = "stalls",
                            RowLetter = "A",
                            SeatNumber = 3,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        },
                        new
                        {
                            Id = new Guid("4ff65e8f-c8a8-44af-b7b3-c9b17852205d"),
                            Category = "loge",
                            RowLetter = "B",
                            SeatNumber = 1,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        },
                        new
                        {
                            Id = new Guid("24f905ea-7e41-4e3c-b2c6-83c08b9ae3a2"),
                            Category = "loge",
                            RowLetter = "B",
                            SeatNumber = 2,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        },
                        new
                        {
                            Id = new Guid("b160874d-5e67-410b-a6b6-14525c10467a"),
                            Category = "loge",
                            RowLetter = "B",
                            SeatNumber = 3,
                            TheatreId = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614")
                        });
                });

            modelBuilder.Entity("Toto.CineOrg.DomainModel.DomainTheatre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Theatres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7973dadd-c7f8-42e5-83b9-729a8ff7c614"),
                            Name = "Test Theatre - One"
                        });
                });

            modelBuilder.Entity("Toto.CineOrg.DomainModel.DomainSeat", b =>
                {
                    b.HasOne("Toto.CineOrg.DomainModel.DomainTheatre", "Theatre")
                        .WithMany("Seats")
                        .HasForeignKey("TheatreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theatre");
                });

            modelBuilder.Entity("Toto.CineOrg.DomainModel.DomainTheatre", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
